AWSTemplateFormatVersion: '2010-09-09'
Description: AWS Welcome App - CloudFormation Template

Parameters:
  LambdaS3Bucket:
    Type: String
    Description: S3 bucket containing Lambda code zip

  LambdaS3Key:
    Type: String
    Description: S3 key of Lambda code zip

Resources:
  WelcomeAppLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: WelcomeAppLambda
      Runtime: python3.11
      Handler: lambda_function.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaS3Key
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref GreetingsTable

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: WelcomeApp-LambdaExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                Resource: "*"

  GreetingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: WelcomeAppGreetings
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: SettingName
          AttributeType: S
      KeySchema:
        - AttributeName: SettingName
          KeyType: HASH

  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: WelcomeAppAPI

  RootResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGateway.RootResourceId
      PathPart: greet
      RestApiId: !Ref ApiGateway

  LambdaApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !Ref RootResource
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri: !Sub >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${WelcomeAppLambda.Arn}/invocations

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref WelcomeAppLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/*

  ApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: LambdaApiMethod
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: prod

  StaticWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "welcomeapp-static-website-${GitHubRepositoryOwner}-${GitHubSha}" # Dynamic name
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      Tags:
        - Key: Application
          Value: WelcomeApp
        - Key: Type
          Value: StaticWebsite

  # NEW: S3 Bucket Policy to allow public read access for the website (essential for hosting)
  StaticWebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticWebsiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
              - s3:GetObject
            Resource: !Join ['', ['arn:aws:s3:::', !Ref StaticWebsiteBucket, '/*']]
          - Effect: Allow # Ensure bucket name is accessible for website config
            Principal: "*"
            Action: "s3:ListBucket"
            Resource: !GetAtt StaticWebsiteBucket.Arn # Grant permissions on the bucket itself

  

Outputs:
  ApiGatewayInvokeUrl:
    Description: API Gateway Invoke URL
    Value: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/greet
    Export:
      Name: ApiGatewayInvokeUrl

  S3WebsiteURL: # New Output for the website URL
    Description: The URL for the static website hosted in S3.
    Value: !GetAtt StaticWebsiteBucket.WebsiteURL
    Export:
      Name: S3WebsiteURL

  StaticWebsiteBucketNameOutput: # New Output for the website bucket name
    Description: The name of the S3 bucket hosting the website.
    Value: !Ref StaticWebsiteBucket
    Export:
      Name: StaticWebsiteBucketName